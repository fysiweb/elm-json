name: CI
on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          # - macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup
            target
          key: ${{ runner.os }}
      - run: rustup component add clippy
      - run: rustup component add rustfmt-preview
      - run: cargo test --locked
      - run: cargo clippy --all-targets --all-features
      - run: cargo fmt --all -- --check

  build_cross:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: Raspberry pi
            target: armv7-unknown-linux-musleabihf
          # Cross currently doesn't include openssl for this particular
          # target, so we can't really make this work that easily.
          # When isahc ships with rusttls support, tho, we can adopt that
          # and more easily cross compile for platforms like FreeBSD!
          # - name: FreeBSD
          #   target: x86_64-unknown-freebsd
    env:
      RUSTFLAGS: "-C link-arg=-s"
    steps:
      - uses: actions/checkout@v2
      - run: cargo install cross
      - run: cross build --release --target ${{ matrix.target }} --locked
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash
      - run: tar czvf elm-json.tar.gz elm-json
        working-directory: target/${{ matrix.target }}/release
      - name: Store binary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: elm-json-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.tar.gz
          path: target/${{ matrix.target }}/release/elm-json.tar.gz

  build:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        include:
          - name: Linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ""
          - name: OSX (intel)
            os: macos-11
            target: x86_64-apple-darwin
            ext: ""
          - name: OSX (arm)
            os: macos-11
            target: aarch64-apple-darwin
            ext: ""
          - name: Windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"
    env:
      RUSTFLAGS: "-C link-arg=-s"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install MUSL target
        if: ${{ matrix.name == 'Linux' }}
        run: sudo apt update && sudo apt install musl-tools
      - uses: actions/checkout@v2
      - run: rustup target add ${{ matrix.target }}
      - run: cargo build --release --target ${{ matrix.target }} --locked
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash
      - run: tar czvf elm-json.tar.gz elm-json${{ matrix.ext }}
        working-directory: target/${{ matrix.target }}/release
      - name: Store binary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: elm-json-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.tar.gz
          path: target/${{ matrix.target }}/release/elm-json.tar.gz

  create_release:
    needs: [build, build_cross]
    if: startsWith(github.ref, 'refs/tags/v')
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: elm-json-*.tar.gz/elm-json-*.tar.gz
